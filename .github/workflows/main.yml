name: Sort Lib

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
      
jobs:
  linting:
    runs-on: ${{matrix.latest-list}}
    strategy:
      matrix:
        latest-list: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install tools
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Lint with black
      run: |
        python -m black .
    - name: Lint with flake8
      run: |
        python -m flake8 . --show-source --statistics --ignore=W391

  test:
    # only run the code testing if linting passed
    needs: linting
    strategy:
      matrix:
        python-version: [3.6, 3.9]
        latest-list: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{matrix.latest-list}}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Test with pytest
      run: |
        python -m pytest

  packaging:
    # only run the packaging if testing passed
    needs: test
    strategy:
      matrix:
        python-version: [3.6, 3.9]
        latest-list: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{matrix.latest-list}}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements-dev.txt
    - name: Build package
      run: |
        python -m build
        # see that the dist directory contains the wheel
        # Command "ls -la was not running, commented out to ensure packaging success"
        # ls -la dist
    - name: Upload package
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v2
      with:
        name: python-packages
        path: dist
